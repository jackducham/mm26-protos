syntax = "proto3";

package character;

option java_package = "mech.mania.engine.domain.model";
option java_outer_classname = "CharacterProtos";
option csharp_namespace = "MM26.IO.Models";

import "item.proto";

message Character {
  int32 current_health = 1;
  int32 base_max_health = 2;
  int32 experience = 3;
  int32 level = 4;
  int32 base_speed = 5;
  Position position = 6;
  Position spawn_point = 7;
  item.Weapon weapon = 8;

  // Parallel arrays to be stored as a triple
  repeated item.TempStatusModifier active_effects_temp_status_modifier = 9;
  repeated string active_effects_source = 10;
  repeated bool active_effects_is_player = 11;

  map<string, int32> tagged_players_damage = 12; // Maps from player name to damage
  bool is_dead = 13;
  int32 ticks_since_death = 14;
  string name = 15;
  int32 base_attack = 16;
  int32 base_defense = 17;
}

message Monster {
  Character character = 1;
  repeated item.Item drops = 2;
}

message Player {
  Character character = 1;
  item.Hat hat = 2;
  item.Clothes clothes = 3;
  item.Shoes shoes = 4;
  repeated item.Item inventory = 5;
}

message PlayerStats {
  int32 level = 1;
  int32 experience = 2;
  int32 monsters_slain = 3;
  int32 attack = 4;
  int32 defense = 5;
  int32 current_health = 6;
  int32 max_health = 7;
  int32 death_count = 8;
  int32 turns_since_joined = 9;
}

message PlayerStatsBundle {
  map<string, PlayerStats> stats = 1;
}

message Position {
  string board_id = 1;
  int32 x = 2;
  int32 y = 3;
}

enum DecisionType{
  NONE = 0;
  MOVE = 1;
  ATTACK = 2;
  PORTAL = 3;
  DROP = 4;
  EQUIP = 5;
  PICKUP = 6;
}

// Proto sent from player to engine and from engine to visualizer
message CharacterDecision {
  character.DecisionType decision_type = 1;

  character.Position target_position = 2; // For MOVE, ATTACK
  int32 index = 3; // For TRAVEL, DROP, EQUIP, PICKUP
}